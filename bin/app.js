"use strict";!function t(e,n,r){function a(o,f){if(!n[o]){if(!e[o]){var l="function"==typeof require&&require;if(!f&&l)return l(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var u=n[o]={exports:{}};e[o][0].call(u.exports,function(t){var n=e[o][1][t];return a(n?n:t)},u,u.exports,t,e,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)a(r[o]);return a}({1:[function(t,e,n){n.fileMetadataCtrl=["$scope","$http",function(t,e){t.submit=function(){var n=new FormData;n.append("file",t.file),e.post("/api/upload",n,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){t.metadata&&Array.isArray(t.metadata)||(t.metadata=[]),t.metadata.push({name:e.data.file.originalname,size:e.data.file.size,mime:e.data.file.mimetype,newName:e.data.file.filename})}).catch(function(t){console.log(t)})}}]},{}],2:[function(t,e,n){n.fileMetadata=function(){return{restrict:"E",templateUrl:"/templates/file-metadata-template.html",controller:"fileMetadataCtrl"}},n.fileInput=["$parse",function(t){return{restrict:"A",link:function(e,n,r){n.on("change",function(){t(r.fileInput).assign(e,n[0].files[0]),e.$apply()})}}}]},{}],3:[function(t,e,n){!function(){var e=angular.module("file-metadata",["ng"]),n=t("./controllers"),r=t("./directives");for(var a in n)n.hasOwnProperty(a)&&e.controller(a,n[a]);for(var i in r)r.hasOwnProperty(i)&&e.directive(i,r[i])}()},{"./controllers":1,"./directives":2}]},{},[3]);